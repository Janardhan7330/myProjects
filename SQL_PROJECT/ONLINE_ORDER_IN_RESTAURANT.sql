CREATE DATABASE RESTAURANT;
USE RESTAURANT;
CREATE TABLE CUSTOMER (
    CUSTOMER_ID INT PRIMARY KEY NOT NULL auto_increment,
    CUSTOMER_NAME VARCHAR(50) NOT NULL,
    CUSTOMER_EMAIL VARCHAR(50) NULL,
    CUSTOMER_PHONE VARCHAR(50) NOT NULL,
    CUSTOMER_ADDRESS TEXT
);
select * from customer;

CREATE TABLE PAYMENT (
    PAYMENT_ID BIGINT(12) PRIMARY KEY NOT NULL AUTO_INCREMENT,
    PAYMENT_DATETIME TIMESTAMP  NULL,
    PAYMENT_METHOD VARCHAR(50) NOT NULL,
	PAYMENT_STATUS VARCHAR(30) DEFAULT 'PROCESSING',
    TOTAL_AMOUNT DOUBLE(15,2) NULL,
    CUSTOMER_ID INT NOT NULL,
    ORDER_ID INT  NULL,
    FOREIGN KEY (CUSTOMER_ID)
        REFERENCES CUSTOMER (CUSTOMER_ID)
);

CREATE TABLE ORDERS (
    ORDER_ID INT PRIMARY KEY NOT NULL,
    ORDER_DATE DATE  NULL,
    ORDER_QTY INT CHECK (ORDER_QTY>0),
    ORDER_STATUS VARCHAR(50) DEFAULT'PACKING',
    CUSTOMER_ID INT,
    FOREIGN KEY (CUSTOMER_ID) 
	  REFERENCES CUSTOMER(CUSTOMER_ID)
);


CREATE TABLE MENU (
    MENU_ID INT PRIMARY KEY,
    MENU_NAME VARCHAR(50),
	MENU_DESCRIPTION VARCHAR(100),
    MENU_PRICE DOUBLE CHECK (MENU_PRICE>0),
    ORDER_ID INT,
    FOREIGN KEY (ORDER_ID) 
       REFERENCES ORDERS(ORDER_ID)
);

CREATE TABLE ORDER_DETAILS (
    ORDER_ID INT,
    MENU_ID INT,
    ORDER_QTY INT,
    TOTAL_AMOUNT DOUBLE(15,2));
    PRIMARY KEY (ORDER_ID , MENU_ID),
    FOREIGN KEY (ORDER_ID)
        REFERENCES ORDERS (ORDER_ID),
    FOREIGN KEY (MENU_ID)
        REFERENCES MENU (MENU_ID)
);

drop table order_details;
drop table menu;
drop table orders;
DROP TABLE CUSTOMER;
DROP TABLE PAYMENT;

describe CUSTOMER;
